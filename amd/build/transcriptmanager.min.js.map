{"version":3,"file":"transcriptmanager.min.js","sources":["../src/transcriptmanager.js"],"sourcesContent":["define(['jquery',\n    'core/log',\n    'qtype_aitext/audiorecorder'\n    ], function($, log,  audiorecorder) {\n  \"use strict\"; // jshint ;_;\n\n  /*\n  This file is to manage the quiz stage\n   */\n\n  log.debug('qtype_aitext transcriptmanager: initialising');\n\n  return {\n\n      //a handle on the audio recorder\n      audiorec: null,\n      \n      //for making multiple instances .. for making multiple instances .. for making multiple instances .. multiple..\n      clone: function () {\n          return $.extend(true, {}, this);\n     },\n\n    init: function(opts) {\n      this.register_events(opts);\n      this.init_components(opts);\n    },\n\n    register_events: function(opts) {\n      var self = this;\n    },//end of register events\n\n    init_components: function(opts) {\n        var app= this;\n        var theCallback = function(message) {\n\n            switch (message.type) {\n                case 'recording':\n                    break;\n                case 'interimspeech':\n                    var wordcount = app.count_words(message.capturedspeech);\n                    $('.' + opts.uniqueid + '_currentwordcount').text(wordcount);\n                    break;\n                case 'speech':\n                    log.debug(\"speech at multiaudio\");\n                    var speechtext = message.capturedspeech;\n                    $('.' + opts.uniqueid).val(speechtext);\n                    log.debug('speechtext:',speechtext);\n            } //end of switch message type\n        };\n\n        //init audio recorder\n        opts.callback = theCallback;\n        opts.stt_guided=false;\n        app.audiorec = audiorecorder.clone();\n        app.audiorec.init(opts);\n    }, //end of init components\n\n    count_words: function(transcript) {\n        return transcript.trim().split(/\\s+/).filter(function(word) {\n            return word.length > 0;\n        }).length;\n    }\n  };\n});"],"names":["define","$","log","audiorecorder","debug","audiorec","clone","extend","this","init","opts","register_events","init_components","app","callback","message","type","wordcount","count_words","capturedspeech","uniqueid","text","speechtext","val","stt_guided","transcript","trim","split","filter","word","length"],"mappings":"AAAAA,wCAAO,CAAC,SACJ,WACA,+BACG,SAASC,EAAGC,IAAMC,sBAOvBD,IAAIE,MAAM,gDAEH,CAGHC,SAAU,KAGVC,MAAO,kBACIL,EAAEM,QAAO,EAAM,GAAIC,OAGhCC,KAAM,SAASC,WACRC,gBAAgBD,WAChBE,gBAAgBF,OAGvBC,gBAAiB,SAASD,QAI1BE,gBAAiB,SAASF,UAClBG,IAAKL,KAmBTE,KAAKI,SAlBa,SAASC,gBAEfA,QAAQC,UACP,sBAEA,oBACGC,UAAYJ,IAAIK,YAAYH,QAAQI,gBACxClB,EAAE,IAAMS,KAAKU,SAAW,qBAAqBC,KAAKJ,qBAEjD,SACDf,IAAIE,MAAM,4BACNkB,WAAaP,QAAQI,eACzBlB,EAAE,IAAMS,KAAKU,UAAUG,IAAID,YAC3BpB,IAAIE,MAAM,cAAckB,cAMpCZ,KAAKc,YAAW,EAChBX,IAAIR,SAAWF,cAAcG,QAC7BO,IAAIR,SAASI,KAAKC,OAGtBQ,YAAa,SAASO,mBACXA,WAAWC,OAAOC,MAAM,OAAOC,QAAO,SAASC,aAC3CA,KAAKC,OAAS,KACtBA"}